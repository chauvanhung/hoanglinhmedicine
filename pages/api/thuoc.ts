import type { NextApiRequest, NextApiResponse } from 'next'

type ThuocInfo = {
  ten: string
  hoat_chat: string
  cong_dung: string
  lieu_dung: string
  can_luu_y: string
  duong_dan: string
}

const danhSachThuoc: ThuocInfo[] = [
  {
    ten: 'Paracetamol',
    hoat_chat: 'Paracetamol 500mg',
    cong_dung: 'Gi·∫£m ƒëau, h·∫° s·ªët nh·∫π ƒë·∫øn v·ª´a.',
    lieu_dung: 'Ng∆∞·ªùi l·ªõn: 500‚Äì1000mg m·ªói 4‚Äì6 gi·ªù. Kh√¥ng qu√° 4g/ng√†y.',
    can_luu_y: 'Tr√°nh d√πng qu√° li·ªÅu. Kh√¥ng k·∫øt h·ª£p v·ªõi r∆∞·ª£u ho·∫∑c thu·ªëc c√≥ c√πng ho·∫°t ch·∫•t.',
    duong_dan: '/san-pham/paracetamol'
  },
  {
    ten: 'Vitamin C 1000mg',
    hoat_chat: 'Acid Ascorbic 1000mg',
    cong_dung: 'TƒÉng s·ª©c ƒë·ªÅ kh√°ng, ch·ªëng oxy h√≥a.',
    lieu_dung: 'U·ªëng 1 vi√™n/ng√†y sau ƒÉn. Kh√¥ng d√πng l√∫c ƒë√≥i.',
    can_luu_y: 'C√≥ th·ªÉ g√¢y k√≠ch ·ª©ng d·∫° d√†y n·∫øu u·ªëng l√∫c ƒë√≥i.',
    duong_dan: '/san-pham/vitamin-c-1000'
  },
  {
    ten: 'Omeprazole',
    hoat_chat: 'Omeprazole 20mg',
    cong_dung: 'Gi·∫£m ti·∫øt acid d·∫° d√†y, ƒëi·ªÅu tr·ªã vi√™m lo√©t, tr√†o ng∆∞·ª£c.',
    lieu_dung: '1 vi√™n m·ªói s√°ng tr∆∞·ªõc ƒÉn, d√πng 4‚Äì8 tu·∫ßn theo ch·ªâ ƒë·ªãnh.',
    can_luu_y: 'Kh√¥ng d√πng l√¢u d√†i n·∫øu kh√¥ng c√≥ ch·ªâ ƒë·ªãnh. C√≥ th·ªÉ g√¢y thi·∫øu B12 khi d√πng k√©o d√†i.',
    duong_dan: '/san-pham/omeprazole'
  }
  // üëâ C√≥ th·ªÉ th√™m c√°c thu·ªëc kh√°c ·ªü ƒë√¢y
]

export default function handler(req: NextApiRequest, res: NextApiResponse) {
  const { ten } = req.query

  if (!ten || typeof ten !== 'string') {
    return res.status(400).json({ error: 'Thi·∫øu t√™n thu·ªëc c·∫ßn t√¨m.' })
  }

  const matched = danhSachThuoc.find(
    (thuoc) => thuoc.ten.toLowerCase() === ten.toLowerCase()
  )

  if (!matched) {
    return res.status(404).json({ error: 'Kh√¥ng t√¨m th·∫•y th√¥ng ten thu·ªëc.' })
  }

  return res.status(200).json(matched)
}
