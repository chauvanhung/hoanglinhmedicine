'use client'

import { useState } from 'react'

export default function PricingPage() {
  const [selectedPlan, setSelectedPlan] = useState('basic')
  const [activeFaq, setActiveFaq] = useState<number[]>([])
  const [isYearly, setIsYearly] = useState(false)

  const plans = [
    {
      id: 'basic',
      name: 'G√≥i C∆° B·∫£n',
      monthlyPrice: '299.000',
      yearlyPrice: '239.000',
      description: 'B·∫Øt ƒë·∫ßu h√†nh tr√¨nh gi·∫£m c√¢n v·ªõi nh·ªØng c√¥ng c·ª• c∆° b·∫£n',
      features: [
        'T√≠nh to√°n BMI v√† theo d√µi c√¢n n·∫∑ng',
        'K·∫ø ho·∫°ch gi·∫£m c√¢n c√° nh√¢n h√≥a',
        'Theo d√µi calo v√† dinh d∆∞·ª°ng c∆° b·∫£n',
        'H∆∞·ªõng d·∫´n t·∫≠p luy·ªán c∆° b·∫£n',
        'H·ªó tr·ª£ qua email',
        'B√°o c√°o ti·∫øn ƒë·ªô h√†ng tu·∫ßn'
      ],
      popular: false,
      color: 'blue'
    },
    {
      id: 'premium',
      name: 'G√≥i Premium',
      monthlyPrice: '599.000',
      yearlyPrice: '479.000',
      description: 'Tr·∫£i nghi·ªám gi·∫£m c√¢n to√†n di·ªán v·ªõi AI v√† chuy√™n gia',
      features: [
        'T·∫•t c·∫£ t√≠nh nƒÉng g√≥i c∆° b·∫£n',
        'AI Coach c√° nh√¢n h√≥a 24/7',
        'T∆∞ v·∫•n dinh d∆∞·ª°ng chi ti·∫øt',
        'K·∫ø ho·∫°ch t·∫≠p luy·ªán n√¢ng cao',
        'Theo d√µi s·ª©c kh·ªèe to√†n di·ªán',
        'Chat tr·ª±c ti·∫øp v·ªõi AI',
        'B√°o c√°o chi ti·∫øt h√†ng ng√†y',
        'H·ªó tr·ª£ ∆∞u ti√™n'
      ],
      popular: true,
      color: 'green'
    },
    {
      id: 'vip',
      name: 'G√≥i VIP',
      monthlyPrice: '1.299.000',
      yearlyPrice: '1.039.000',
      description: 'D·ªãch v·ª• cao c·∫•p v·ªõi b√°c sƒ© chuy√™n khoa v√† hu·∫•n luy·ªán vi√™n',
      features: [
        'T·∫•t c·∫£ t√≠nh nƒÉng g√≥i Premium',
        'T∆∞ v·∫•n tr·ª±c ti·∫øp v·ªõi b√°c sƒ© chuy√™n khoa',
        'Hu·∫•n luy·ªán vi√™n c√° nh√¢n 1-1',
        'K·∫ø ho·∫°ch dinh d∆∞·ª°ng chi ti·∫øt t·ª´ chuy√™n gia',
        'Theo d√µi s·ª©c kh·ªèe ƒë·ªãnh k·ª≥',
        'ƒê·∫∑t l·ªãch kh√°m b√°c sƒ© ∆∞u ti√™n',
        'H·ªó tr·ª£ 24/7 qua ƒëi·ªán tho·∫°i',
        'B√°o c√°o s·ª©c kh·ªèe h√†ng tu·∫ßn',
        'T∆∞ v·∫•n t√¢m l√Ω v√† ƒë·ªông l·ª±c'
      ],
      popular: false,
      color: 'gold'
    }
  ]

  const handleSelectPlan = (planId: string) => {
    setSelectedPlan(planId)
  }

  const handleSubscribe = (planId: string) => {
    // TODO: Implement payment integration
    alert(`B·∫°n ƒë√£ ch·ªçn g√≥i ${plans.find(p => p.id === planId)?.name}. Ch·ª©c nƒÉng thanh to√°n s·∫Ω ƒë∆∞·ª£c c·∫≠p nh·∫≠t s·ªõm!`)
  }

  const toggleFaq = (index: number) => {
    setActiveFaq(prev => 
      prev.includes(index) 
        ? prev.filter(i => i !== index)
        : [...prev, index]
    )
  }

  const handleToggleBilling = () => {
    setIsYearly(!isYearly)
  }

  const getCurrentPrice = (plan: any) => {
    return isYearly ? plan.yearlyPrice : plan.monthlyPrice
  }

  const getCurrentPeriod = () => {
    return isYearly ? 'nƒÉm' : 'th√°ng'
  }

  return (
    <div className="page-background">
      <div className="page-container">
        {/* Page Header */}
        <section className="pricing-header">
          <div className="header-container">
            <h1>üíé G√≥i C∆∞·ªõc D·ªãch V·ª•</h1>
            <p>Ch·ªçn g√≥i ph√π h·ª£p v·ªõi m·ª•c ti√™u gi·∫£m c√¢n c·ªßa b·∫°n</p>
          </div>
        </section>

        {/* Pricing Toggle */}
        <section className="pricing-toggle">
          <div className="toggle-container">
            <span className="toggle-label">Thanh to√°n theo th√°ng</span>
            <div className="toggle-switch">
              <input 
                type="checkbox" 
                id="billing-toggle" 
                className="toggle-input"
                checked={isYearly}
                onChange={handleToggleBilling}
              />
              <label htmlFor="billing-toggle" className="toggle-label-switch"></label>
            </div>
            <span className="toggle-label">Thanh to√°n theo nƒÉm (Ti·∫øt ki·ªám 20%)</span>
          </div>
        </section>

        {/* Pricing Plans */}
        <section className="pricing-plans">
          <div className="plans-container">
            {plans.map((plan) => (
              <div 
                key={plan.id} 
                className={`pricing-card ${plan.popular ? 'popular' : ''} ${plan.color}`}
              >
                {plan.popular && (
                  <div className="popular-badge">üî• Ph·ªï bi·∫øn nh·∫•t</div>
                )}
                
                <div className="plan-header">
                  <h3 className="plan-name">{plan.name}</h3>
                  <div className="plan-price">
                    <span className="price-amount">‚Ç´{getCurrentPrice(plan)}</span>
                    <span className="price-period">/{getCurrentPeriod()}</span>
                  </div>
                  {isYearly && (
                    <div className="savings-badge">
                      <span className="savings-text">Ti·∫øt ki·ªám 20%</span>
                    </div>
                  )}
                  <p className="plan-description">{plan.description}</p>
                </div>

                <div className="plan-features">
                  <ul>
                    {plan.features.map((feature, index) => (
                      <li key={index} className="feature-item">
                        <span className="feature-icon">‚úì</span>
                        <span className="feature-text">{feature}</span>
                      </li>
                    ))}
                  </ul>
                </div>

                <div className="plan-actions">
                  <button 
                    className={`btn btn-${plan.color} ${selectedPlan === plan.id ? 'selected' : ''}`}
                    onClick={() => handleSelectPlan(plan.id)}
                  >
                    {selectedPlan === plan.id ? '‚úì ƒê√£ ch·ªçn' : 'Ch·ªçn g√≥i n√†y'}
                  </button>
                  
                  {selectedPlan === plan.id && (
                    <button 
                      className="btn btn-primary btn-subscribe"
                      onClick={() => handleSubscribe(plan.id)}
                    >
                      üöÄ ƒêƒÉng k√Ω ngay
                    </button>
                  )}
                </div>
              </div>
            ))}
          </div>
        </section>

        {/* FAQ Section */}
        <section className="pricing-faq">
          <div className="faq-container">
            <h2>‚ùì C√¢u h·ªèi th∆∞·ªùng g·∫∑p</h2>
            
            <div className="faq-list">
              <div className={`faq-item ${activeFaq.includes(0) ? 'active' : ''}`}>
                <div className="faq-question" onClick={() => toggleFaq(0)}>
                  <h4>T√¥i c√≥ th·ªÉ thay ƒë·ªïi g√≥i c∆∞·ªõc kh√¥ng?</h4>
                  <span className="faq-toggle">{activeFaq.includes(0) ? '‚àí' : '+'}</span>
                </div>
                <div className="faq-answer">
                  <p>C√≥, b·∫°n c√≥ th·ªÉ n√¢ng c·∫•p ho·∫∑c h·∫° c·∫•p g√≥i c∆∞·ªõc b·∫•t c·ª© l√∫c n√†o. Thay ƒë·ªïi s·∫Ω c√≥ hi·ªáu l·ª±c t·ª´ chu k·ª≥ thanh to√°n ti·∫øp theo.</p>
                </div>
              </div>

              <div className={`faq-item ${activeFaq.includes(1) ? 'active' : ''}`}>
                <div className="faq-question" onClick={() => toggleFaq(1)}>
                  <h4>G√≥i c∆∞·ªõc c√≥ bao g·ªìm t∆∞ v·∫•n b√°c sƒ© kh√¥ng?</h4>
                  <span className="faq-toggle">{activeFaq.includes(1) ? '‚àí' : '+'}</span>
                </div>
                <div className="faq-answer">
                  <p>G√≥i Premium v√† VIP bao g·ªìm t∆∞ v·∫•n AI, ch·ªâ g√≥i VIP m·ªõi c√≥ t∆∞ v·∫•n tr·ª±c ti·∫øp v·ªõi b√°c sƒ© chuy√™n khoa.</p>
                </div>
              </div>

              <div className={`faq-item ${activeFaq.includes(2) ? 'active' : ''}`}>
                <div className="faq-question" onClick={() => toggleFaq(2)}>
                  <h4>T√¥i c√≥ th·ªÉ h·ªßy g√≥i c∆∞·ªõc b·∫•t c·ª© l√∫c n√†o kh√¥ng?</h4>
                  <span className="faq-toggle">{activeFaq.includes(2) ? '‚àí' : '+'}</span>
                </div>
                <div className="faq-answer">
                  <p>C√≥, b·∫°n c√≥ th·ªÉ h·ªßy g√≥i c∆∞·ªõc b·∫•t c·ª© l√∫c n√†o. G√≥i c∆∞·ªõc s·∫Ω ho·∫°t ƒë·ªông ƒë·∫øn h·∫øt chu k·ª≥ ƒë√£ thanh to√°n.</p>
                </div>
              </div>

              <div className={`faq-item ${activeFaq.includes(3) ? 'active' : ''}`}>
                <div className="faq-question" onClick={() => toggleFaq(3)}>
                  <h4>C√≥ ch√≠nh s√°ch ho√†n ti·ªÅn kh√¥ng?</h4>
                  <span className="faq-toggle">{activeFaq.includes(3) ? '‚àí' : '+'}</span>
                </div>
                <div className="faq-answer">
                  <p>Ch√∫ng t√¥i c√≥ ch√≠nh s√°ch ho√†n ti·ªÅn trong v√≤ng 30 ng√†y ƒë·∫ßu ti√™n n·∫øu b·∫°n kh√¥ng h√†i l√≤ng v·ªõi d·ªãch v·ª•.</p>
                </div>
              </div>
            </div>
          </div>
        </section>

        {/* Contact CTA */}
        <section className="pricing-cta">
          <div className="cta-container">
            <h2>üí¨ C·∫ßn t∆∞ v·∫•n th√™m?</h2>
            <p>ƒê·ªôi ng≈© chuy√™n gia c·ªßa ch√∫ng t√¥i s·∫µn s√†ng h·ªó tr·ª£ b·∫°n ch·ªçn g√≥i c∆∞·ªõc ph√π h·ª£p nh·∫•t</p>
            <div className="cta-actions">
              <a href="/contact" className="btn btn-primary">üìû Li√™n h·ªá t∆∞ v·∫•n</a>
              <a href="/chat" className="btn btn-outline">üí¨ Chat v·ªõi AI</a>
            </div>
          </div>
        </section>


      </div>
    </div>
  )
}
