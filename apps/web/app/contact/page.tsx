'use client'

import { useState } from 'react'

export default function ContactPage() {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    subject: '',
    message: ''
  })
  const [isSubmitting, setIsSubmitting] = useState(false)
  const [submitStatus, setSubmitStatus] = useState<'idle' | 'success' | 'error'>('idle')
  const [activeFaq, setActiveFaq] = useState<number | null>(null)

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
    const { name, value } = e.target
    setFormData(prev => ({
      ...prev,
      [name]: value
    }))
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setIsSubmitting(true)
    
    // Simulate API call
    setTimeout(() => {
      setIsSubmitting(false)
      setSubmitStatus('success')
      setFormData({
        name: '',
        email: '',
        phone: '',
        subject: '',
        message: ''
      })
      
      // Reset success message after 3 seconds
      setTimeout(() => {
        setSubmitStatus('idle')
      }, 3000)
    }, 1000)
  }

  const toggleFaq = (index: number) => {
    setActiveFaq(activeFaq === index ? null : index)
  }

  const contactInfo = [
    {
      icon: 'üìû',
      title: 'ƒêi·ªán tho·∫°i',
      content: '1900 1238',
      description: 'H·ªó tr·ª£ 24/7'
    },
    {
      icon: '‚úâÔ∏è',
      title: 'Email',
      content: 'support@hoanglinhmedicine.com',
      description: 'Ph·∫£n h·ªìi trong 24h'
    },
    {
      icon: 'üìç',
      title: 'ƒê·ªãa ch·ªâ',
      content: '123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM',
      description: 'Tr·ª• s·ªü ch√≠nh'
    },
    {
      icon: 'üïí',
      title: 'Gi·ªù l√†m vi·ªác',
      content: 'Th·ª© 2 - Th·ª© 6: 8:00 - 18:00',
      description: 'Th·ª© 7: 8:00 - 12:00'
    }
  ]

  return (
    <div className="page-background">
      <div className="page-container">
        {/* Hero Section */}
        <section className="contact-hero">
          <div className="hero-content">
            <h1 className="page-title">Li√™n h·ªá v·ªõi ch√∫ng t√¥i</h1>
            <p className="page-subtitle">
              Ch√∫ng t√¥i lu√¥n s·∫µn s√†ng l·∫Øng nghe v√† h·ªó tr·ª£ b·∫°n. H√£y ƒë·ªÉ l·∫°i th√¥ng tin, 
              ƒë·ªôi ng≈© chuy√™n gia c·ªßa Hoang Linh Medicine s·∫Ω li√™n h·ªá l·∫°i trong th·ªùi gian s·ªõm nh·∫•t.
            </p>
          </div>
        </section>

        {/* Contact Info Grid */}
        <section className="contact-info-section">
          <div className="contact-info-grid">
            {contactInfo.map((info, index) => (
              <div key={index} className="contact-info-card">
                <div className="info-icon">{info.icon}</div>
                <div className="info-content">
                  <h3 className="info-title">{info.title}</h3>
                  <p className="info-main">{info.content}</p>
                  <p className="info-desc">{info.description}</p>
                </div>
              </div>
            ))}
          </div>
        </section>

        {/* Contact Form */}
        <section className="contact-form-section">
          <div className="form-container">
            <div className="form-header">
              <h2>G·ª≠i tin nh·∫Øn cho ch√∫ng t√¥i</h2>
              <p>ƒêi·ªÅn th√¥ng tin b√™n d∆∞·ªõi, ch√∫ng t√¥i s·∫Ω ph·∫£n h·ªìi s·ªõm nh·∫•t c√≥ th·ªÉ</p>
            </div>

            <form className="contact-form" onSubmit={handleSubmit}>
              <div className="form-row">
                <div className="form-group">
                  <label htmlFor="name">H·ªç v√† t√™n *</label>
                  <input
                    type="text"
                    id="name"
                    name="name"
                    value={formData.name}
                    onChange={handleInputChange}
                    placeholder="Nh·∫≠p h·ªç v√† t√™n c·ªßa b·∫°n"
                    required
                  />
                </div>
                <div className="form-group">
                  <label htmlFor="email">Email *</label>
                  <input
                    type="email"
                    id="email"
                    name="email"
                    value={formData.email}
                    onChange={handleInputChange}
                    placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ email"
                    required
                  />
                </div>
              </div>

              <div className="form-row">
                <div className="form-group">
                  <label htmlFor="phone">S·ªë ƒëi·ªán tho·∫°i</label>
                  <input
                    type="tel"
                    id="phone"
                    name="phone"
                    value={formData.phone}
                    onChange={handleInputChange}
                    placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
                  />
                </div>
                <div className="form-group">
                  <label htmlFor="subject">Ch·ªß ƒë·ªÅ *</label>
                  <select
                    id="subject"
                    name="subject"
                    value={formData.subject}
                    onChange={handleInputChange}
                    required
                  >
                    <option value="">Ch·ªçn ch·ªß ƒë·ªÅ</option>
                    <option value="consultation">T∆∞ v·∫•n s·ª©c kh·ªèe</option>
                    <option value="service">D·ªãch v·ª•</option>
                    <option value="billing">Thanh to√°n</option>
                    <option value="technical">H·ªó tr·ª£ k·ªπ thu·∫≠t</option>
                    <option value="feedback">G√≥p √Ω</option>
                    <option value="other">Kh√°c</option>
                  </select>
                </div>
              </div>

              <div className="form-group">
                <label htmlFor="message">N·ªôi dung tin nh·∫Øn *</label>
                <textarea
                  id="message"
                  name="message"
                  value={formData.message}
                  onChange={handleInputChange}
                  placeholder="Nh·∫≠p n·ªôi dung tin nh·∫Øn c·ªßa b·∫°n..."
                  rows={6}
                  required
                />
                <div className="char-count">
                  {formData.message.length}/1000 k√Ω t·ª±
                </div>
              </div>

              <button 
                type="submit" 
                className="submit-btn"
                disabled={isSubmitting}
              >
                {isSubmitting ? 'ƒêang g·ª≠i...' : 'G·ª≠i tin nh·∫Øn'}
              </button>

              {submitStatus === 'success' && (
                <div className="success-message">
                  ‚úÖ C·∫£m ∆°n b·∫°n! Tin nh·∫Øn ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng. Ch√∫ng t√¥i s·∫Ω li√™n h·ªá l·∫°i s·ªõm nh·∫•t c√≥ th·ªÉ.
                </div>
              )}
            </form>
          </div>
        </section>

        {/* FAQ Section */}
        <section className="contact-faq-section">
          <div className="faq-container">
            <h2>C√¢u h·ªèi th∆∞·ªùng g·∫∑p</h2>
            <div className="faq-list">
              <div className={`faq-item ${activeFaq === 0 ? 'active' : ''}`}>
                <div className="faq-question" onClick={() => toggleFaq(0)}>
                  <h4>Th·ªùi gian ph·∫£n h·ªìi l√† bao l√¢u?</h4>
                  <span className="faq-toggle">{activeFaq === 0 ? '‚àí' : '+'}</span>
                </div>
                <div className="faq-answer">
                  <p>Ch√∫ng t√¥i th∆∞·ªùng ph·∫£n h·ªìi trong v√≤ng 24 gi·ªù l√†m vi·ªác. ƒê·ªëi v·ªõi c√°c tr∆∞·ªùng h·ª£p kh·∫©n c·∫•p, vui l√≤ng g·ªçi hotline 1900 1238.</p>
                </div>
              </div>

              <div className={`faq-item ${activeFaq === 1 ? 'active' : ''}`}>
                <div className="faq-question" onClick={() => toggleFaq(1)}>
                  <h4>T√¥i c√≥ th·ªÉ ƒë·∫∑t l·ªãch t∆∞ v·∫•n tr·ª±c ti·∫øp kh√¥ng?</h4>
                  <span className="faq-toggle">{activeFaq === 1 ? '‚àí' : '+'}</span>
                </div>
                <div className="faq-answer">
                  <p>C√≥, b·∫°n c√≥ th·ªÉ ƒë·∫∑t l·ªãch t∆∞ v·∫•n tr·ª±c ti·∫øp v·ªõi b√°c sƒ© chuy√™n khoa. Vui l√≤ng g·ªçi hotline ho·∫∑c ƒëi·ªÅn form ƒë·∫∑t l·ªãch tr√™n website.</p>
                </div>
              </div>

              <div className={`faq-item ${activeFaq === 2 ? 'active' : ''}`}>
                <div className="faq-question" onClick={() => toggleFaq(2)}>
                  <h4>Chi ph√≠ t∆∞ v·∫•n nh∆∞ th·∫ø n√†o?</h4>
                  <span className="faq-toggle">{activeFaq === 2 ? '‚àí' : '+'}</span>
                </div>
                <div className="faq-answer">
                  <p>T∆∞ v·∫•n qua ƒëi·ªán tho·∫°i mi·ªÖn ph√≠. T∆∞ v·∫•n tr·ª±c ti·∫øp c√≥ ph√≠ theo t·ª´ng g√≥i d·ªãch v·ª•. Vui l√≤ng tham kh·∫£o b·∫£ng gi√° tr√™n trang pricing.</p>
                </div>
              </div>
            </div>
          </div>
        </section>
      </div>
    </div>
  )
}