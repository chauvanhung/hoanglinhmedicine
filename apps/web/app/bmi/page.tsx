'use client'

import { useState } from 'react'

export default function BMIPage() {
  const [height, setHeight] = useState('')
  const [weight, setWeight] = useState('')
  const [bmi, setBmi] = useState<number | null>(null)
  const [category, setCategory] = useState('')
  const [categoryDescription, setCategoryDescription] = useState('')
  const [categoryIcon, setCategoryIcon] = useState('üìä')
  const [calorieRecommendation, setCalorieRecommendation] = useState('')
  const [waterRecommendation, setWaterRecommendation] = useState('')
  const [exerciseRecommendation, setExerciseRecommendation] = useState('')

  const calculateBMI = () => {
    if (!height || !weight) return
    
    const heightM = parseFloat(height) / 100
    const weightKg = parseFloat(weight)
    const bmiValue = weightKg / (heightM * heightM)
    
    setBmi(Math.round(bmiValue * 10) / 10)
    
    // Ph√¢n lo·∫°i BMI
    if (bmiValue < 18.5) {
      setCategory('Thi·∫øu c√¢n')
      setCategoryDescription('B·∫°n c·∫ßn tƒÉng c√¢n ƒë·ªÉ ƒë·∫°t m·ª©c BMI kh·ªèe m·∫°nh')
      setCategoryIcon('üìâ')
      setCalorieRecommendation(`${Math.round(weightKg * 35)} kcal/ng√†y`)
      setWaterRecommendation(`${Math.round(weightKg * 0.04)} l√≠t/ng√†y`)
      setExerciseRecommendation('30 ph√∫t/ng√†y (nh·∫π nh√†ng)')
    } else if (bmiValue < 25) {
      setCategory('B√¨nh th∆∞·ªùng')
      setCategoryDescription('Ch√∫c m·ª´ng! B·∫°n ƒëang ·ªü m·ª©c BMI l√Ω t∆∞·ªüng')
      setCategoryIcon('‚úÖ')
      setCalorieRecommendation(`${Math.round(weightKg * 30)} kcal/ng√†y`)
      setWaterRecommendation(`${Math.round(weightKg * 0.035)} l√≠t/ng√†y`)
      setExerciseRecommendation('45 ph√∫t/ng√†y (v·ª´a ph·∫£i)')
    } else if (bmiValue < 30) {
      setCategory('Th·ª´a c√¢n')
      setCategoryDescription('B·∫°n c·∫ßn gi·∫£m c√¢n ƒë·ªÉ ƒë·∫°t m·ª©c BMI kh·ªèe m·∫°nh')
      setCategoryIcon('‚ö†Ô∏è')
      setCalorieRecommendation(`${Math.round(weightKg * 25)} kcal/ng√†y`)
      setWaterRecommendation(`${Math.round(weightKg * 0.035)} l√≠t/ng√†y`)
      setExerciseRecommendation('60 ph√∫t/ng√†y (c∆∞·ªùng ƒë·ªô cao)')
    } else if (bmiValue < 35) {
      setCategory('B√©o ph√¨ ƒë·ªô I')
      setCategoryDescription('B·∫°n c·∫ßn gi·∫£m c√¢n ƒë·ªÉ c·∫£i thi·ªán s·ª©c kh·ªèe')
      setCategoryIcon('üö®')
      setCalorieRecommendation(`${Math.round(weightKg * 20)} kcal/ng√†y`)
      setWaterRecommendation(`${Math.round(weightKg * 0.04)} l√≠t/ng√†y`)
      setExerciseRecommendation('45 ph√∫t/ng√†y (v·ª´a ph·∫£i)')
    } else if (bmiValue < 40) {
      setCategory('B√©o ph√¨ ƒë·ªô II')
      setCategoryDescription('B·∫°n c·∫ßn gi·∫£m c√¢n d∆∞·ªõi s·ª± gi√°m s√°t y t·∫ø')
      setCategoryIcon('üö®')
      setCalorieRecommendation(`${Math.round(weightKg * 18)} kcal/ng√†y`)
      setWaterRecommendation(`${Math.round(weightKg * 0.04)} l√≠t/ng√†y`)
      setExerciseRecommendation('30 ph√∫t/ng√†y (nh·∫π nh√†ng)')
    } else {
      setCategory('B√©o ph√¨ ƒë·ªô III')
      setCategoryDescription('B·∫°n c·∫ßn can thi·ªáp y t·∫ø ƒë·ªÉ gi·∫£m c√¢n')
      setCategoryIcon('üö®')
      setCalorieRecommendation(`${Math.round(weightKg * 15)} kcal/ng√†y`)
      setWaterRecommendation(`${Math.round(weightKg * 0.04)} l√≠t/ng√†y`)
      setExerciseRecommendation('20 ph√∫t/ng√†y (r·∫•t nh·∫π)')
    }
  }

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    calculateBMI()
  }

  return (
    <div className="bmi-page">
      {/* Header */}
      <header className="page-header">
        <div className="header-container">
          <a href="/" className="back-link">‚Üê Quay l·∫°i trang ch·ªß</a>
          <h1>üìä M√°y t√≠nh BMI th√¥ng minh</h1>
          <p>T√≠nh to√°n ch·ªâ s·ªë BMI v√† nh·∫≠n khuy·∫øn ngh·ªã dinh d∆∞·ª°ng c√° nh√¢n h√≥a</p>
        </div>
      </header>

      {/* BMI Calculator Form */}
      <section className="bmi-calculator">
        <div className="calculator-container">
          <div className="calculator-card">
            <div className="calculator-header">
              <div className="calculator-icon">‚öñÔ∏è</div>
              <h2>T√≠nh BMI c·ªßa b·∫°n</h2>
              <p>Nh·∫≠p th√¥ng tin ƒë·ªÉ nh·∫≠n k·∫øt qu·∫£ ch√≠nh x√°c</p>
            </div>

            <form className="bmi-form" onSubmit={handleSubmit}>
              <div className="form-group">
                <label htmlFor="height">Chi·ªÅu cao (cm)</label>
                <input 
                  type="number" 
                  id="height" 
                  name="height" 
                  placeholder="V√≠ d·ª•: 170"
                  min="100"
                  max="250"
                  value={height}
                  onChange={(e) => setHeight(e.target.value)}
                  required
                />
              </div>

              <div className="form-group">
                <label htmlFor="weight">C√¢n n·∫∑ng (kg)</label>
                <input 
                  type="number" 
                  id="weight" 
                  name="weight" 
                  placeholder="V√≠ d·ª•: 65"
                  min="30"
                  max="300"
                  value={weight}
                  onChange={(e) => setWeight(e.target.value)}
                  required
                />
              </div>

              <button type="submit" className="calculate-btn">
                üßÆ T√≠nh BMI ngay
              </button>
            </form>
          </div>

          {/* BMI Result Display */}
          {bmi && (
            <div className="result-card" id="bmi-result">
              <div className="result-header">
                <h3>K·∫øt qu·∫£ BMI c·ªßa b·∫°n</h3>
                <div className="bmi-score">
                  <span className="score-number" id="bmi-number">{bmi}</span>
                  <span className="score-label">BMI</span>
                </div>
              </div>

              <div className="bmi-category">
                <div className="category-icon" id="category-icon">{categoryIcon}</div>
                <div className="category-info">
                  <h4 id="category-title">{category}</h4>
                  <p id="category-description">{categoryDescription}</p>
                </div>
              </div>

              <div className="bmi-recommendations">
                <h4>Khuy·∫øn ngh·ªã dinh d∆∞·ª°ng</h4>
                <div className="recommendation-item">
                  <div className="rec-icon">üçΩÔ∏è</div>
                  <div className="rec-content">
                    <h5>L∆∞·ª£ng calo khuy·∫øn ngh·ªã</h5>
                    <p id="calorie-recommendation">{calorieRecommendation}</p>
                  </div>
                </div>
                
                <div className="recommendation-item">
                  <div className="rec-icon">üíß</div>
                  <div className="rec-content">
                    <h5>L∆∞·ª£ng n∆∞·ªõc c·∫ßn u·ªëng</h5>
                    <p id="water-recommendation">{waterRecommendation}</p>
                  </div>
                </div>

                <div className="recommendation-item">
                  <div className="rec-icon">üèÉ‚Äç‚ôÄÔ∏è</div>
                  <div className="rec-content">
                    <h5>Ho·∫°t ƒë·ªông th·ªÉ ch·∫•t</h5>
                    <p id="exercise-recommendation">{exerciseRecommendation}</p>
                  </div>
                </div>
              </div>

              <div className="action-buttons">
                <a href="/onboarding" className="btn btn-primary">üéØ T·∫°o k·∫ø ho·∫°ch gi·∫£m c√¢n</a>
                <a href="/" className="btn btn-outline">üè† V·ªÅ trang ch·ªß</a>
              </div>
            </div>
          )}
        </div>
      </section>

      {/* BMI Information */}
      <section className="bmi-info">
        <div className="info-container">
          <h2>üìö Hi·ªÉu v·ªÅ ch·ªâ s·ªë BMI</h2>
          
          <div className="info-grid">
            <div className="info-card">
              <div className="info-icon">üìä</div>
              <h3>BMI l√† g√¨?</h3>
              <p>Ch·ªâ s·ªë BMI (Body Mass Index) l√† th∆∞·ªõc ƒëo ƒë√°nh gi√° t√¨nh tr·∫°ng c√¢n n·∫∑ng d·ª±a tr√™n chi·ªÅu cao v√† c√¢n n·∫∑ng c·ªßa b·∫°n.</p>
            </div>

            <div className="info-card">
              <div className="info-icon">üßÆ</div>
              <h3>C√°ch t√≠nh BMI</h3>
              <p>BMI = C√¢n n·∫∑ng (kg) / [Chi·ªÅu cao (m)]¬≤</p>
              <div className="formula-example">
                <strong>V√≠ d·ª•:</strong> 65kg, 1.70m ‚Üí BMI = 65 / (1.70)¬≤ = 22.5
              </div>
            </div>

            <div className="info-card">
              <div className="info-icon">üìà</div>
              <h3>Ph√¢n lo·∫°i BMI</h3>
              <ul className="bmi-categories">
                <li><span className="category underweight">Thi·∫øu c√¢n:</span> &lt; 18.5</li>
                <li><span className="category normal">B√¨nh th∆∞·ªùng:</span> 18.5 - 24.9</li>
                <li><span className="category overweight">Th·ª´a c√¢n:</span> 25.0 - 29.9</li>
                <li><span className="category obese">B√©o ph√¨:</span> ‚â• 30.0</li>
              </ul>
            </div>
          </div>
        </div>
      </section>

      {/* Health Tips */}
      <section className="health-tips">
        <div className="tips-container">
          <h2>üí° L·ªùi khuy√™n s·ª©c kh·ªèe</h2>
          
          <div className="tips-grid">
            <div className="tip-card">
              <div className="tip-icon">ü•ó</div>
              <h3>Dinh d∆∞·ª°ng c√¢n b·∫±ng</h3>
              <p>ƒÇn ƒëa d·∫°ng th·ª±c ph·∫©m, ∆∞u ti√™n rau xanh, protein n·∫°c v√† ng≈© c·ªëc nguy√™n h·∫°t.</p>
            </div>

            <div className="tip-card">
              <div className="tip-icon">üí™</div>
              <h3>V·∫≠n ƒë·ªông th∆∞·ªùng xuy√™n</h3>
              <p>T·∫≠p luy·ªán √≠t nh·∫•t 150 ph√∫t/tu·∫ßn v·ªõi c∆∞·ªùng ƒë·ªô v·ª´a ph·∫£i ƒë·ªÉ duy tr√¨ s·ª©c kh·ªèe.</p>
            </div>

            <div className="tip-card">
              <div className="tip-icon">üò¥</div>
              <h3>Ng·ªß ƒë·ªß gi·∫•c</h3>
              <p>Ng·ªß 7-9 gi·ªù m·ªói ƒë√™m ƒë·ªÉ c∆° th·ªÉ ph·ª•c h·ªìi v√† duy tr√¨ c√¢n n·∫∑ng kh·ªèe m·∫°nh.</p>
            </div>

            <div className="tip-card">
              <div className="tip-icon">üíß</div>
              <h3>U·ªëng ƒë·ªß n∆∞·ªõc</h3>
              <p>U·ªëng 2-3 l√≠t n∆∞·ªõc m·ªói ng√†y ƒë·ªÉ h·ªó tr·ª£ trao ƒë·ªïi ch·∫•t v√† ki·ªÉm so√°t c√¢n n·∫∑ng.</p>
            </div>
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="bmi-cta">
        <div className="cta-container">
          <h2>üöÄ S·∫µn s√†ng thay ƒë·ªïi cu·ªôc s·ªëng?</h2>
          <p>ƒê√£ bi·∫øt BMI c·ªßa m√¨nh? H√£y ƒë·ªÉ HoangLinh gi√∫p b·∫°n t·∫°o k·∫ø ho·∫°ch gi·∫£m c√¢n khoa h·ªçc!</p>
          <div className="cta-buttons">
            <a href="/onboarding" className="btn btn-primary btn-large">üéØ B·∫Øt ƒë·∫ßu h√†nh tr√¨nh</a>
            <a href="/" className="btn btn-secondary btn-large">üè† V·ªÅ trang ch·ªß</a>
          </div>
        </div>
      </section>
    </div>
  )
}
